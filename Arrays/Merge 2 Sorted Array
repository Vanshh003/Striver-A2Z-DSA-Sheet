https://www.codingninjas.com/studio/problems/sorted-array_6613259?utm_source=striver&utm_medium=website&utm_campaign=a_zcoursetuf&leftPanelTabValue=PROBLEM




// TC: O((m+n)log(m+n))
// SC: O(m+n)

#include <bits/stdc++.h>
vector<int> sortedArray(vector<int> a, vector<int> b) {
    map<int, int> map;

    for(int i: a) map[i]++;
    for(int i: b) map[i]++;

    vector<int> ans;
    for(auto i: map) ans.push_back(i.first);

    return ans;
}





// TC: O((m+n)log(m+n))
// SC: O(m+n)

#include <bits/stdc++.h>
vector<int> sortedArray(vector<int> a, vector<int> b) {
    set<int> set;

    for(int i: a) set.insert(i);
    for(int i: b) set.insert(i);

    vector<int> ans;
    for(auto i: set) ans.push_back(i);

    return ans;
}





// TC: O(m+n)
// SC: O(m+n)

#include <bits/stdc++.h>
vector<int> sortedArray(vector<int> arr1, vector<int> arr2) {
    int n = arr1.size();
    int m = arr2.size();
    int i=0;
    int j=0;
    vector<int> ans; 
    
    while(i<n && j<m) {
        if(arr1[i] <= arr2[j]) {
            if(ans.size() == 0 || ans.back() != arr1[i]) ans.push_back(arr1[i]);
            i++;
        } 
        else {
            if(ans.size() == 0 || ans.back() != arr2[j]) ans.push_back(arr2[j]);
            j++;
        }
    }

    while(i < n) {
        if(ans.back() != arr1[i]) ans.push_back(arr1[i]);
        i++;
    }

    while(j < m) {
        if(ans.back() != arr2[j]) ans.push_back(arr2[j]);
        j++;
    }

    return ans;
}
