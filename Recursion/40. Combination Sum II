https://leetcode.com/problems/combination-sum-ii/description/




class Solution {
public:
    void solve(int i, vector<vector<int>> &ans, vector<int> &v, vector<int> &arr, int target) {
        if(target == 0) {
            ans.push_back(v);
            return;
        }

        for(int ind=i; ind<arr.size(); ind++) {
            if(ind>i && arr[ind] == arr[ind-1]) continue;
            if(arr[ind] > target) break;

            v.push_back(arr[ind]);
            solve(ind+1, ans, v, arr, target-arr[ind]);
            v.pop_back();
        }
    }

    vector<vector<int>> combinationSum2(vector<int> &candidate, int target) {
        int n = candidate.size();
        vector<vector<int>> res;
        vector<int> v;

        sort(candidate.begin(), candidate.end());
        solve(0, res, v, candidate, target);

        return res;
    }
};
