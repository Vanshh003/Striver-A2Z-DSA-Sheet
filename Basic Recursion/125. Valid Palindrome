https://leetcode.com/problems/valid-palindrome/description/




// class Solution {
// public:
//     bool isPalin(string s) {
//         int i = 0; 
//         int j = s.size()-1;
        
//         while(i <= j) {
//             if(s[i] != s[j]) return false;
//             i++;
//             j--;
//         }

//         return true;
//     }
    
//     bool isPalindrome(string s) {
//         bool ans = true;
//         string str = "";

//         for(int i=0; i<s.size(); i++) if(isalpha(s[i]) || isdigit(s[i])) str += tolower(s[i]);
        
//         return isPalin(str);
//     }
// };






class Solution {
public:
    bool isPalin(vector<char> &str, int i, int j) {
        if(i >= j) return true;
        if(str[i] != str[j]) return false;
        return isPalin(str, i+1, j-1); 
    }
    
    bool isPalindrome(string s) {
        vector<char> str;
        for(char i: s) {
            if(isalnum(i)) str.push_back(tolower(i));
        }
        
        int n = str.size();
        return isPalin(str, 0, n-1);
    }
};
