https://practice.geeksforgeeks.org/problems/top-view-of-binary-tree/1




class Solution {
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    vector<int> topView(Node* root) {
        vector<int> ans;
        if(root == NULL) return ans;
        
        map<int, int> map;
        queue<pair<Node*, int>> q;
        
        q.push({root, 0});
        while(!q.empty()) {
            auto it = q.front();
            q.pop();
            
            Node* node = it.first;
            int vertical = it.second;
            
            if(map.find(vertical) = map.end()) map[vertical] = node->data;
            
            if(node->left != NULL) q.push({node->left, vertical-1});
            if(node->right != NULL) q.push({node->right, vertical+1});
        }
        
        for(auto i: map) ans.push_back(i.second);
        
        return ans;
    }

};
