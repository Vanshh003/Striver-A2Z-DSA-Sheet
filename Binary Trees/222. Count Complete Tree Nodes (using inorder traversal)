https://leetcode.com/problems/count-complete-tree-nodes/description/




/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

// TC: O(n)
// SC: O(h) (since it is a complete binary tree the height of the binary tree at the worst case will be logN)

class Solution {
public:
    void inorder(TreeNode* root, int &count) {
        if(root == NULL) return;

        count++;

        inorder(root->left, count);
        inorder(root->right, count);
    }

    int countNodes(TreeNode* root) {
        int count = 0;
        inorder(root, count);

        return count;    
    }
};
