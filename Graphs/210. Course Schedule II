https://leetcode.com/problems/course-schedule-ii/description/




class Solution {
public:
    vector<int> findOrder(int numCourses, vector<vector<int>>& prerequisites) {
        vector<int> adj[numCourses];
        vector<int> indegree(numCourses, 0);

        for(auto &i: prerequisites) {
            adj[i[1]].push_back(i[0]);
            indegree[i[0]]++;
        }

        queue<int> q;
        vector<int> topo;

        for(int i=0; i<numCourses; i++) {
            if(indegree[i] == 0) q.push(i);
        }

        while(!q.empty()) {
            int node = q.front();
            q.pop();

            topo.push_back(node);

            for(auto &i: adj[node]) {
                indegree[i]--;
                if(indegree[i] == 0) q.push(i);
            }
        }

        if(topo.size() == numCourses) return topo;
        return {};
    }
};
