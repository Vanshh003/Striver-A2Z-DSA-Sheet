https://www.geeksforgeeks.org/problems/connected-components-in-an-undirected-graph/1?itm_source=geeksforgeeks&itm_medium=article&itm_campaign=practice_card




class Solution {
  public:
  
    void dfs(int ind, int v, vector<int> adj[], vector<int> &visited, vector<int> &temp) {
        visited[ind] = 1;
        temp.push_back(ind);
        
        for(auto &i: adj[ind]) {
            if(!visited[i]) dfs(i, v, adj, visited, temp);
        }
    }
    
    vector<vector<int>> connectedcomponents(int v, vector<vector<int>>& edges) {
        int n = edges.size();
        
        vector<int> adj[v];
        
        for(int i=0; i<n; i++) {
            adj[edges[i][0]].push_back(edges[i][1]);
            adj[edges[i][1]].push_back(edges[i][0]);
        }
        
        vector<int> visited(v, 0);
        vector<vector<int>> ans;
        
        for(int i=0; i<v; i++) {
            if(!visited[i]) {
                vector<int> temp;
                
                dfs(i, v, adj, visited, temp);
                
                sort(temp.begin(), temp.end());
                ans.push_back(temp);
            }
        }
        
        return ans;
    }
};
