https://leetcode.com/problems/course-schedule/description/




class Solution {
public:

    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        vector<int> adj[numCourses];    
        vector<int> indegree(numCourses, 0);

        for(auto &i: prerequisites) {
            adj[i[1]].push_back(i[0]);
            indegree[i[0]]++;
        }

        queue<int> q;

        for(int i=0; i<numCourses; i++) {
            if(indegree[i] == 0) q.push(i);
        } 

        vector<int> topo;
        while(!q.empty()) {
            int node = q.front();
            q.pop();

            topo.push_back(node);

            for(int &i: adj[node]) {
                indegree[i]--;
                if(indegree[i] == 0) q.push(i); 
            }
        }

        return topo.size() == numCourses;
    }
};
