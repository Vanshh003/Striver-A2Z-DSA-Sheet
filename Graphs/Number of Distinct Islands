https://www.geeksforgeeks.org/problems/number-of-distinct-islands/0




class Solution {
  public:
    void dfs(int row, int col, vector<vector<int>> &visited, vector<vector<int>> &grid, vector<pair<int, int>> &v, int r0, int c0) {
        int n = grid.size();
        int m = grid[0].size();
        
        visited[row][col] = 1;
        v.push_back({row - r0, col - c0});
        
        int delRow[] = {-1, 0 , 1, 0};
        int delCol[] = {0, 1, 0, -1};
        
        for(int i=0; i<4; i++) {
            int nRow = row + delRow[i];
            int nCol = col + delCol[i];
            
            if(nRow >= 0 && nRow < n && nCol >= 0 && nCol < m && !visited[nRow][nCol] && grid[nRow][nCol] == 1) {
                dfs(nRow, nCol, visited, grid, v, r0, c0);
            }
        }
    }
    
    int countDistinctIslands(vector<vector<int>> &grid) {
        int n = grid.size();
        int m = grid[0].size();
        vector<vector<int>> visited(n, vector<int>(m, 0));
        
        set<vector<pair<int, int>>> st;
        
        for(int i=0; i<n; i++) {
            for(int j=0; j<m; j++) {
               
                if(!visited[i][j] && grid[i][j] == 1) {
                    vector<pair<int, int>> v;
                  
                    dfs(i, j, visited, grid, v, i, j);
                    st.insert(v);
                }
                
            }
        }
        
        return st.size();
    }
};
